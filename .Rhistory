geom_line(data = omn, color = "red") +
geom_point(data = fru) +
geom_line(data = fru, color = "purple") +
geom_point(data = plant) +
geom_line(data = plant, color = "green") +
geom_point(data = group_by_data) +
geom_line(data = group_by_data, color = "black") +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()+
scale_color_manual("Legend Title", limits=c("Weekly Forecast", "Main Forecast"), values = c("red","red")) +
guides(colour = guide_legend(override.aes = list(pch = c(16, 21), fill = c("red", "white")))))
(plot3 <- ggplot(invert, aes(dia, cummspp)) +
geom_point() + geom_line(color = "blue") +
geom_point(data = omn) +
geom_line(data = omn, color = "red") +
geom_point(data = fru) +
geom_line(data = fru, color = "purple") +
geom_point(data = plant) +
geom_line(data = plant, color = "green") +
geom_point(data = group_by_data) +
geom_line(data = group_by_data, color = "black") +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()+
theme(legend.position="bottom"))
(plot3 <- ggplot(invert, aes(dia, cummspp)) +
geom_point() + geom_line(color = "blue") +
geom_point(data = omn) +
geom_line(data = omn, color = "red") +
geom_point(data = fru) +
geom_line(data = fru, color = "purple") +
geom_point(data = plant) +
geom_line(data = plant, color = "green") +
geom_point(data = group_by_data) +
geom_line(data = group_by_data, color = "black") +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()+
theme(legend.position="bottom"))
(plot3 <- ggplot(invert, aes(dia, cummspp)) +
geom_point() + geom_line(color = "blue") +
geom_point(data = omn) +
geom_line(data = omn, color = "red") +
geom_point(data = fru) +
geom_line(data = fru, color = "purple") +
geom_point(data = plant) +
geom_line(data = plant, color = "green") +
geom_point(data = group_by_data) +
geom_line(data = group_by_data, color = "black") +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs())
(plot3 <- ggplot(invert, aes(dia, cummspp)) +
geom_point() + geom_line(color = "blue") +
geom_point(data = omn) +
geom_line(data = omn, color = "red") +
geom_point(data = fru) +
geom_line(data = fru, color = "purple") +
geom_point(data = plant) +
geom_line(data = plant, color = "green") +
geom_point(data = group_by_data) +
geom_line(data = group_by_data, color = "black") +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()+
theme(legend.text = element_text(colour="blue", size=10,
face="bold")))
View(sem_goiaba_grouped)
complete(sem_goiaba_grouped, dia)
sem_goiaba <- filtered %>%
select(goiaba == "sem goiaba")
complete(sem_goiaba_grouped, dia)
sem_goiaba_grouped %>%
fill(dia)
com_goiaba <- filtered %>%
filter(goiaba == "com goiaba", keep.na = TRUE)
View(com_goiaba)
View(com_goiaba)
group_by_data <-
filtered %>%                             #Applying group_by &summarise
group_by(dia, goiaba) %>%
summarise(especie = n())
group_by_data <-
filtered %>%                             #Applying group_by &summarise
group_by(dia) %>%
summarise(especie = n())
group_by_data$z <- 0
sum <- 0
for (i in 1:nrow(group_by_data)) {
#print(i)
sum <- (group_by_data[i, 2] + sum)
group_by_data[i, 3] <- sum
}
colnames(group_by_data)[3] ="cumsum"
colnames(group_by_data)[3] ="cummspp"
ggplot(group_by_data, aes(dia, cummspp)) +
geom_point()
group_by_goiaba <-
filtered %>%                             #Applying group_by &summarise
group_by(dia, goiaba) %>%
summarise(especie = n())
View(group_by_goiaba)
df <- data.frame(dia)
dia <- [1, 32]
dia <- c(1, 32)
dia <- c(1, 32, by = 1)
dia <- seq(1, 32, by = 1)
df <- data.frame(dia)
dia_df <- data.frame(dia)
df_fru <- merge(x=dia_df, y=fru_no,
by="dia", all.x =T)
View(df_fru)
group_by_data <-
dados_diet %>%                             #Applying group_by &summarise
group_by(data, parcela) %>%
summarise(especie = n_distinct(especie))
View(group_by_data)
df <- dados_diet[order(dados_diet$dia),]
View(df)
filtered <- df %>%
filter(duplicated(especie) == FALSE)
View(filtered)
group_by_data <-
filtered %>%                             #Applying group_by &summarise
group_by(dia) %>%
summarise(especie = n())
df_order <- dados_diet[order(dados_diet$dia),]
filtered <- df_order %>%
filter(duplicated(especie) == FALSE)
group_by_data <-
filtered %>%                             #Applying group_by &summarise
group_by(dia) %>%
summarise(especie = n())
group_by_dia <-
filtered %>%                             #Applying group_by &summarise
group_by(dia) %>%
summarise(especie = n())
group_by_dia$cumspp_t <- 0
sum <- 0
for (i in 1:nrow(group_by_data)) {
#print(i)
sum <- (group_by_data[i, 2] + sum)
group_by_data[i, 3] <- sum
}
View(com_goiaba_grouped)
View(group_by_dia)
for (i in 1:nrow(group_by_dia)) {
#print(i)
sum <- (group_by_dia[i, 2] + sum)
group_by_dia[i, 3] <- sum
}
group_by_dia$cumspp_t <- 0
sum <- 0
for (i in 1:nrow(group_by_dia)) {
#print(i)
sum <- (group_by_dia[i, 2] + sum)
group_by_dia[i, 3] <- sum
}
group_by_dia <- group_by_dia %>%
select(-especie)
filtered <- df_order %>%
filter(duplicated(especie) == FALSE)
group_by_dia <-
filtered %>%                             #Applying group_by &summarise
group_by(dia) %>%
summarise(especie = n())
#create new column
group_by_dia$cumspp_t <- 0
#define place for for loop to store values
sum <- 0
for (i in 1:nrow(group_by_dia)) {
sum <- (group_by_dia[i, 2] + sum)
group_by_dia[i, 3] <- sum
}
group_by_dia <- group_by_dia %>%
select(-especie)
ggplot(group_by_data, aes(dia, cumspp_t)) +
geom_point()
ggplot(group_by_dia, aes(dia, cumspp_t)) +
geom_point()
group_by_goiaba <-
filtered %>%
group_by(dia, goiaba) %>%
summarise(especie = n())
com_goiaba <- filtered %>%
filter(goiaba == "com goiaba")
View(com_goiaba)
com_goiaba_grouped <-
com_goiaba %>%                             #Applying group_by &summarise
group_by(dia) %>%
summarise(especie = n())
View(com_goiaba_grouped)
group_by_goiaba <-
filtered %>%
group_by(dia, goiaba) %>%
summarise(especie = n())
View(group_by_goiaba)
com_goiaba_grouped$cumspp_cg <- 0
sum <- 0
for (i in 1:nrow(com_goiaba_grouped)) {
#print(i)
sum <- (com_goiaba_grouped[i, 2] + sum)
com_goiaba_grouped[i, 3] <- sum
}
com_goiaba_grouped <- com_goiaba_grouped %>%
select(-especie)
com_goiaba_grouped[nrow(com_goiaba_grouped) + 1,] <- list(32, 25)
View(com_goiaba_grouped)
#get rid of species column
sem_goiaba_grouped <- sem_goiaba_grouped %>%
select(-especie)
df_fru <- merge(x=dia_df, y=com_goiaba_grouped,
by="dia", all.x =T)
df_goiaba <- merge(x=dia_df, y=com_goiaba_grouped,
by="dia", all.x =T)
View(df_goiaba)
df_goiaba <- merge(x=df_goiaba, y=sem_goiaba_grouped,
by="dia", all.x =T)
View(df_goiaba)
plot1 <- ggplot(df_goiaba, aes(dia, cumsum_cg, cumsum_sg)) +
geom_point() + geom_line() +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()
plot1
sem_goiaba_grouped$cumspp_sg <- 0
sum <- 0
for (i in 1:nrow(sem_goiaba_grouped)) {
#print(i)
sum <- (sem_goiaba_grouped[i, 2] + sum)
sem_goiaba_grouped[i, 3] <- sum
}
#get rid of species column
sem_goiaba_grouped <- sem_goiaba_grouped %>%
select(-especie)
View(sem_goiaba_grouped)
sem_goiaba <- filtered %>%
select(goiaba == "sem goiaba")
sem_goiaba_grouped <-
sem_goiaba %>%                             #Applying group_by &summarise
group_by(dia) %>%
summarise(especie = n())
sem_goiaba_grouped$cumspp_sg <- 0
sum <- 0
for (i in 1:nrow(sem_goiaba_grouped)) {
#print(i)
sum <- (sem_goiaba_grouped[i, 2] + sum)
sem_goiaba_grouped[i, 3] <- sum
}
#get rid of species column
sem_goiaba_grouped <- sem_goiaba_grouped %>%
select(-especie)
dia <- seq(1, 32, by = 1)
dia_df <- data.frame(dia)
df_goiaba <- merge(x=dia_df, y=com_goiaba_grouped,
by="dia", all.x =T)
df_goiaba <- merge(x=df_goiaba, y=sem_goiaba_grouped,
by="dia", all.x =T)
plot1 <- ggplot(df_goiaba, aes(dia, cumsum_cg, cumsum_sg)) +
geom_point() + geom_line() +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()
plot1
plot1 <- ggplot(df_goiaba, aes(dia, cumspp_cg, cumspp_sg)) +
geom_point() + geom_line() +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()
plot1
plot1 <- ggplot(df_goiaba, aes(dia, cumspp_cg, cumspp_sg)) +
geom_point() + geom_line(dia$cumspp_cg) +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()
plot1 <- ggplot(df_goiaba, aes(dia, cumspp_cg, cumspp_sg)) +
geom_point() + geom_line(cumspp_cg) +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()
plot1 <- ggplot(df_goiaba, aes(dia, cumspp_cg, cumspp_sg)) +
geom_point() + geom_line(df_goiabacumspp_cg) +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()
plot1
plot1 <- ggplot(df_goiaba, aes(dia, cumspp_cg, cumspp_sg)) +
geom_point() + geom_line(df_goiaba$cumspp_cg) +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()
plot1 <- ggplot(df_goiaba, aes(dia, cumspp_cg, cumspp_sg)) +
geom_point() + geom_line(df_goiaba$cumspp_cg) +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()
plot1 <- ggplot(df_goiaba, aes(dia, cumspp_cg, cumspp_sg)) +
geom_point(df_goiaba$cumspp_cg) + geom_line() +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs()
df_goiaba <- merge(x=sem_goiaba_grouped, y=com_goiaba_grouped,
by="dia", all.x =T)
View(df_goiaba)
dia_df
df_goiaba <- merge(x=dia_df, y=com_goiaba_grouped,
by="dia", all.x =T)
df_goiaba <- merge(x=df_goiaba, y=sem_goiaba_grouped,
by="dia", all.x =T)
complete(df_goiaba)
com_goiaba_grouped$cumspp <- 0
sum <- 0
for (i in 1:nrow(com_goiaba_grouped)) {
#print(i)
sum <- (com_goiaba_grouped[i, 2] + sum)
com_goiaba_grouped[i, 3] <- sum
}
#get rid of species column
com_goiaba_grouped <- com_goiaba_grouped %>%
select(-especie)
#add value to last day to make graph line go all the way to the end
com_goiaba_grouped[nrow(com_goiaba_grouped) + 1,] <- list(32, 25)
View(com_goiaba_grouped)
com_goiaba <- filtered %>%
filter(goiaba == "com goiaba")
com_goiaba_grouped <-
com_goiaba %>%                             #Applying group_by &summarise
group_by(dia) %>%
summarise(especie = n())
com_goiaba_grouped$cumspp <- 0
sum <- 0
for (i in 1:nrow(com_goiaba_grouped)) {
#print(i)
sum <- (com_goiaba_grouped[i, 2] + sum)
com_goiaba_grouped[i, 3] <- sum
}
#get rid of species column
com_goiaba_grouped <- com_goiaba_grouped %>%
select(-especie)
#add value to last day to make graph line go all the way to the end
com_goiaba_grouped[nrow(com_goiaba_grouped) + 1,] <- list(32, 25)
sem_goiaba <- filtered %>%
select(goiaba == "sem goiaba")
sem_goiaba_grouped <-
sem_goiaba %>%                             #Applying group_by &summarise
group_by(dia) %>%
summarise(especie = n())
sem_goiaba_grouped$cumspp <- 0
sum <- 0
for (i in 1:nrow(sem_goiaba_grouped)) {
#print(i)
sum <- (sem_goiaba_grouped[i, 2] + sum)
sem_goiaba_grouped[i, 3] <- sum
}
#get rid of species column
sem_goiaba_grouped <- sem_goiaba_grouped %>%
select(-especie)
(plot1 <- ggplot(com_goiaba_grouped, aes(dia, cumspp)) +
geom_point() + geom_line(color = "magenta") +
geom_point(data = sem_goiaba_grouped) +
geom_line(data = sem_goiaba_grouped, color = "green") +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs())
plot1
(plot1 <- ggplot(com_goiaba_grouped, aes(dia, cumspp)) +
geom_point() + geom_line(color = "magenta") +
geom_point(data = sem_goiaba_grouped) +
geom_line(data = sem_goiaba_grouped, color = "green") +
theme_classic() +
xlab("sampling day")+
ylab("cummulative number of species") +
labs())
load_dados <- readr::read_csv(here::here("qualificação", "dados", "dados8.csv"))
package.list <- c("here", #so I don't have to deal with setting a WD
"vegan", #mantel test
"tidyverse", #data cleaning
"dplyr", #data cleaning
"stringr", #data cleaning
"ggplot2", #mantel test visualization
"remotes",
"psych",
"matrix"
)
#installing the packages if they aren't already on the computer
new.packages <- package.list[!(package.list %in% installed.packages()
[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
#and loading the packages into R with a for loop
for(i in package.list){library(i, character.only = T)}
load_dados <- readr::read_csv(here::here("qualificação", "dados", "dados8.csv"))
dados <- as_tibble(load_dados)
subset_dados <- dados %>% select(1:5, 10:11, 21, 23)
fezes <- filter(subset_dados, fc == "y")
View(dados)
subset_dados <- dados %>% select(1:5, 10:11, 21, 23:24)
View(subset_dados)
subset_dados <- dados %>% select(1:5, 10:11, 21, 23:24)
fezes <- filter(subset_dados, fc == "y")
spp_corr1 <- fezes %>%
mutate(especie = str_replace_all(especie, "Stilpnia cayana",
"Tangara cayana"))
spp_corr1 <- spp_corr1 %>%
mutate(especie = str_replace_all(especie, "Myiothlypis flaveola",
"Basileuterus flaveolus"))
spp_corr2 <- spp_corr1 %>%
mutate(especie = str_replace_all(especie, c("Dryobates passerinus",
"Clibanornis rectirostris"),
c("Veniliornis passerinus",
"Hylocryptus rectirostris")))
spp_corr3 <- spp_corr2 %>%
mutate(especie = str_replace_all(especie, "Asemospiza fuliginosa",
"Tiaris fuliginosus"))
goiaba <- spp_corr3 %>%
mutate(goiaba = case_when(grepl("207", parcela) ~ "sem goiaba",
grepl("20", parcela) ~ "com goiaba",
grepl("22", parcela) ~ "com goiaba",
grepl("84", parcela) ~ "com goiaba",
grepl("87", parcela) ~ "com goiaba",
grepl("88", parcela) ~ "com goiaba",
grepl("90", parcela) ~ "com goiaba",
grepl("206", parcela) ~ "com goiaba",
grepl("64", parcela) ~ "sem goiaba",
grepl("56", parcela) ~ "sem goiaba"))
data(elton_birds)
elton_traits <- readr::read_tsv(here::here("qualificação", "dados","BirdFuncDat.txt"))
subset_diet <- elton_traits %>% select(4, 8, 16, 20)
colnames(subset_diet)[2] ="especie"
dados_diet <- merge(x=goiaba, y=subset_diet,
by="especie", all.x =T)
View(dados_diet)
colnames(dados_diet)[13] ="guild"
colnames(dados_diet)[11] ="familia"
colnames(dados_diet)[10] ="recap"
dados_diet <- dados_diet %>%
mutate(cons_fruto = case_when(`Diet-Fruit`> 0 ~ "sim",
`Diet-Fruit` == 0 ~ "não",))
list_spp1 <- distinct(dados_diet, especie, familia, cons_fruto, guild, .keep_all = FALSE)
list <-
dados_diet  %>%
group_by(especie)  %>%
summarise(numero = n())
final_list <- merge(x=list_spp1, y=list,
by="especie", all.x =T)
write.csv(final_list,"table.csv")
dados_diet <- dados_diet %>%
mutate(cons_fruto = case_when(`Diet-Fruit`> 0 ~ "sim",
`Diet-Fruit` == 0 ~ "não",))
dados_diet <- merge(x=goiaba, y=subset_diet,
by="especie", all.x =T)
colnames(dados_diet)[14] ="guild"
colnames(dados_diet)[12] ="familia"
colnames(dados_diet)[10] ="recap"
dados_diet <- dados_diet %>%
mutate(cons_fruto = case_when(`Diet-Fruit`> 0 ~ "sim",
`Diet-Fruit` == 0 ~ "não",))
list_spp1 <- distinct(dados_diet, especie, familia, cons_fruto, guild, .keep_all = FALSE)
list <-
dados_diet  %>%
group_by(especie)  %>%
summarise(numero = n())
final_list <- merge(x=list_spp1, y=list,
by="especie", all.x =T)
dados_diet <- dados_diet %>%
mutate(rede_hora = (haf - har)/3600)
dados_diet$rede_hora <- as.numeric(dados_diet$rede_hora)
group_by_parcela <-
dados_diet %>%                             #Applying group_by &summarise
group_by(parcela) %>%
summarise(especie = n_distinct(especie), indivíduos = n_distinct(amostra),
taxa_cap = (n_distinct(amostra)/(sum(rede_hora)/(n_distinct(amostra)/n_distinct(data)))),
rede_hora = sum(rede_hora)/(n_distinct(amostra)/n_distinct(data)),
recap = sum(recap),
seeds = sum(seeds))
View(group_by_parcela)
dados_diet <- dados_diet %>%
mutate(cons_fruto = case_when(`Diet-Fruit`> 0 ~ 1,
`Diet-Fruit` == 0 ~ 0,))
list_spp1 <- distinct(dados_diet, especie, familia, cons_fruto, guild, .keep_all = FALSE)
list <-
dados_diet  %>%
group_by(especie)  %>%
summarise(numero = n())
View(list)
final_list <- merge(x=list_spp1, y=list,
by="especie", all.x =T)
View(final_list)
group_by_parcela <-
dados_diet %>%                             #Applying group_by &summarise
group_by(parcela) %>%
summarise(especie = n_distinct(especie), indivíduos = n_distinct(amostra),
taxa_cap = (n_distinct(amostra)/(sum(rede_hora)/(n_distinct(amostra)/n_distinct(data)))),
rede_hora = sum(rede_hora)/(n_distinct(amostra)/n_distinct(data)),
recap = sum(recap),
seeds = sum(seeds),
fruit = sum(cons_fruto))
View(group_by_parcela)
